<style lang="less">
@import '../common/default.less';
.address {
  .xian-cells {
    margin-top: 20rpx;
    position:relative;
    background-color:#FFFFFF;
    font-size:30rpx;
    .xian-cell_input{
      margin:0 25rpx;
      padding: 23rpx 0;
      position:relative;
      display:flex;
      align-items:center;
      .xian-cell__hd{
        .xian-label{
          width:140rpx;
          word-wrap:break-word;
          word-break:break-all;
        }
      }
      .xian-cell__bd{
        flex: 1;
        .xian-input{
        }
        .xian-input-picker {
          color: @minorColor;
          .icon-dingwei{
            font-size:30rpx;
            margin-right:10rpx;
            color:#888;
          }
        }
        .xian-input-picker:after{
          content: " ";
          display: inline-block;
          height: 14rpx;
          width: 14rpx;
          border-width: 2rpx 2rpx 0 0;
          border-color: @minorColor;
          border-style: solid;
          -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
          transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
          position: absolute;
          top: 50%;
          right: 14rpx;
          margin-top: -8rpx;
        }
        .xian-cell_select{
          color:#000;
        }
        .xian-cell_tag{
          background:#ffffff;
          border:1rpx solid #cacaca;
          border-radius:2rpx;
          width: 58rpx;
          height: 33rpx;
          font-size: 20rpx;
          color:@minorColor;
          letter-spacing:0.19rpx;
          padding: 6rpx;
          margin-right: 20rpx;
        }
        .xian-cell_tag.active{
          border-color: @primaryColor;
          color: @primaryColor;
        }
      }
    }
    .xian-cell_input:before{
      content:" ";
      position:absolute;
      left:0;
      top:0;
      right:0;
      border-top:1rpx solid @thinColor;
    }
    .xian-cell_input:first-child:before{
      border-top: none;
    }
  }
  .btn-area {
    .save{
      background:@primaryColor;
      border-radius:4rpx;
      width:670rpx;
      height:94rpx;
      font-family:PingFangSC-Regular;
      font-size:32rpx;
      color:#ffffff;
      letter-spacing:2.13rpx;
      line-height: 94rpx;
      margin-top: 50rpx;
    }
    .delete{
      background:#ffffff;
      border-radius:4rpx;
      width:670rpx;
      height:94rpx;
      font-family:PingFangSC-Regular;
      font-size:32rpx;
      color:@minorColor;
      letter-spacing:2.13rpx;
      margin-top: 30rpx;
    }
  }
}
</style>
<template>
  <form class="address" @submit="saveAddress">
    <view class="xian-cells">
      <view class="xian-cell_input">
        <view class="xian-cell__hd">
          <view class="xian-label">收货人</view>
        </view>
        <view class="xian-cell__bd">
          <input class="xian-input" placeholder="姓名" focus="{{type === 'new' ? true : false}}" name="receiver" bindinput="inputName" value="{{receiver}}"/>
        </view>
      </view>
      <view class="xian-cell_input">
        <view class="xian-cell__hd">
          <view class="xian-label">电话</view>
        </view>
        <view class="xian-cell__bd">
          <input class="xian-input" placeholder="手机号码" type="number" maxlength="11" name="phoneNumber" bindinput="inputPhone" value="{{phoneNumber}}"/>
        </view>
      </view>
      <view class="xian-cell_input">
        <view class="xian-cell__hd">
          <view class="xian-label">收货地址</view>
        </view>
        <view class="xian-cell__bd">
          <view class="xian-input-picker" @tap="selectAddress">
            <i class="iconfont icon-dingwei">&#xe62f;</i>
            <text class="{{address ? 'xian-cell_select' : ''}}">{{ address === '' ? '选择小区/写字楼/学校' : address.detail}}
            </text>
          </view>
        </view>
      </view>
      <view class="xian-cell_input">
        <view class="xian-cell__hd">
          <view class="xian-label">详细地址</view>
        </view>
        <view class="xian-cell__bd">
          <input class="xian-input" placeholder="例：10幢101室" name="unitNumber" bindinput="inputNum" value="{{unitNumber}}"/>
        </view>
      </view>
      <view class="xian-cell_input">
        <view class="xian-cell__hd">
          <view class="xian-label">标签</view>
        </view>
        <view class="xian-cell__bd">
          <block wx:for="{{tags}}" wx:key="*this">
            <text class="xian-cell_tag {{item.select ? 'active' : ''}}" @tap="selectTag({{item.id}})">{{item.name}}</text>
          </block>
        </view>
      </view>
    </view>
    <view class="btn-area">
      <button class="save" formType="submit">保存{{from ? '并使用' : ''}}</button>
      <button wx:if="{{type === 'edit'}}" class="delete" @tap="deleteAddress">删除</button>
    </view>
  </form>
</template>
<script>
  import wepy from 'wepy'
  import baseMixin from '../mixins/base'
  import DistriComponent from '../components/distriAddress'
  import api from '../api/index'
  import _ from 'underscore'
  var QQMapWX = require('../utils/qqmap-wx-jssdk.min.js')
  var qqmapsdk

  export default class DistriAddress extends wepy.page {
    config = {
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: false,
      disableScroll: false,
      onReachBottomDistance: 50
    }

    components = {
    }

    // 引入混合
    mixins = [baseMixin]

    data = {
      type: 'new',
      tags: [{
        id: '0',
        name: '公司',
        select: false
      }, {
        id: '1',
        name: '住宅',
        select: false
      }, {
        id: '2',
        name: '学校',
        select: false
      }, {
        id: '3',
        name: '其他',
        select: false
      }],
      selectTag: '公司',
      from: null,
      addressId: null,
      address: null,
      receiver: null,
      phoneNumber: null,
      unitNumber: null
    }

    computed = {
    }

    watch = {
    }

    events = {}

    methods = {
      selectTag(id) {
        _.each(this.tags, tag => {
          if (tag.id === id) {
            if (!tag.select) {
              tag.select = true
              this.selectTag = tag.name
              this.$apply()
            }
          } else {
            if (tag.select) {
              tag.select = false
              this.$apply()
            }
          }
        })
      },
      inputName(e) {
        this.receiver = e.detail.value
      },
      inputPhone(e) {
        this.phoneNumber = e.detail.value
      },
      inputNum(e) {
        this.unitNumber = e.detail.value
      },
      selectAddress() {
        var that = this
        var address = {}
        wx.chooseLocation({
          success: function(res) {
            var coordinate = {}
            coordinate.lat = res.latitude
            coordinate.lng = res.longitude
            address.coordinate = coordinate
            address.detail = res.name 
            qqmapsdk.reverseGeocoder({
              location: {
                latitude: res.latitude,
                longitude: res.longitude
              },
              success: function(res) {
                address.province = res.result.address_component.province
                address.city = res.result.address_component.city
                address.area = res.result.address_component.district
                that.address = address
                that.$apply()
              },
              fail: function(res) {
              },
              complete: function(res) {
              }
            })
          }
        })
      },
      async saveAddress(event) {
        var that = this
        const { receiver, phoneNumber, unitNumber } = event.detail.value
        if (!receiver || (receiver.trim() === '')) {
          wepy.showToast({
            title: '请输入姓名',
            icon: 'none'
          })
          return false
        }
        if (!phoneNumber || (phoneNumber.trim() === '')) {
          wepy.showToast({
            title: '请输入手机号码，以便配送员联系您',
            icon: 'none'
          })
          return false
        }
        if (!(/^1[0-9]\d{9}$/.test(phoneNumber))) {
          wepy.showToast({
            title: '请输入正确的手机号',
            icon: 'none'
          })
          return false
        }
        if (!this.address) {
          wepy.showToast({
            title: '请选择收货地址',
            icon: 'none'
          })
          return false
        
        }
        var addressId = ''
        var userId = this.$parent.globalData.userId || this.$parent.globalData.userInfo.userId || wx.getStorageSync('userId')
        
        switch (this.type) {
          case 'new':
            const addAddress = await api.myAddress.addAddress({
              method: 'POST',
              query: {
                userId: userId,
                receiver: receiver,
                phoneNumber: phoneNumber,
                province: that.address.province,
                city: that.address.city,
                area: that.address.area,
                detail: that.address.detail,
                unitNumber: unitNumber,
                tag: that.selectTag,
                coordinate: that.address.coordinate,
                createdAt: Date.now(),
                isRemoved: false
              }
            })
            addressId = addAddress.data
            break
          case 'edit':
            addressId = that.addressId
            const updateAddress = await api.myAddress.updateAddress({
              method: 'POST',
              query: {
                _id: addressId,
                userId: userId,
                receiver: receiver,
                phoneNumber: phoneNumber,
                province: that.address.province,
                city: that.address.city,
                area: that.address.area,
                detail: that.address.detail,
                unitNumber: unitNumber,
                tag: that.selectTag,
                coordinate: that.address.coordinate
              }
            })
            break
          default:
        }

        switch (this.from) {
          case 'confirmOrder':
            //设置全局配送信息
            this.$parent.globalData.pickerId = ''
            this.$parent.globalData.addressId = addressId
            this.$parent.globalData.location.landmark = this.address.detail // + this.address.unitNumber
            this.$parent.globalData.location.coordinate = this.address.coordinate
            this.$parent.globalData.location.province = this.address.province
            this.getBoxId(that.address.coordinate.lat,that.address.coordinate.lng)
          break
          case 'index':
            this.$parent.globalData.pickerId = ''
            this.$parent.globalData.addressId = addressId
            this.$parent.globalData.location.landmark = this.address.detail // + this.address.unitNumber
            this.$parent.globalData.location.coordinate = this.address.coordinate
            this.$parent.globalData.location.province = this.address.province
            this.getBoxId(that.address.coordinate.lat,that.address.coordinate.lng)
          break
          case 'shopCar':
            this.$parent.globalData.pickerId = ''
            this.$parent.globalData.addressId = addressId
            this.$parent.globalData.location.landmark = this.address.detail // + this.address.unitNumber
            this.$parent.globalData.location.coordinate = this.address.coordinate
            this.$parent.globalData.location.province = this.address.province
            this.getBoxId(that.address.coordinate.lat,that.address.coordinate.lng)
          break
          default:
            wx.navigateBack({})
        }
        
      },
      deleteAddress() {
        var that = this
        wepy.showModal({
          title: '提示',
          content: '确定删除当前地址？'
        }).then((res) => {
          if (res.confirm) {
            // 这里做删除地址操作
            const removeAddress = api.myAddress.removeAddress({
              method: 'DELETE',
              query: {
                _id: that.addressId
              }
            })
            wx.navigateBack({})
          }
        })
      }
    }
    async getBoxId(latitude, longitude) {
      var that = this
      const result = await api.location.getClosestBoxID({
        query: {
          lat: latitude,
          lng: longitude
        }
      })
      if (result.statusCode === 200) {
        if (result.data.status !== 200) {
          this.$parent.globalData.boxId = 'BJ0001'
          this.$parent.globalData.isExpress = true
          this.$parent.globalData.sendWay = 'express'
        } else {
          this.$parent.globalData.boxId = result.data.boxId
          this.$parent.globalData.isExpress = false
          this.$parent.globalData.sendWay = 'send'
        }
        switch (this.from) {
          case 'confirmOrder':
            wx.navigateBack({
              delta: 2
            })
          break
          case 'index':
            wx.reLaunch({
              url: '/pages/' + that.from
            })
          break
          case 'shopCar':
            wx.reLaunch({
              url: '/pages/' + that.from
            })
          break
          default:
        }
      }
    }
    async init(id) {
      var that = this
      var userId = this.$parent.globalData.userId || this.$parent.globalData.userInfo.userId || wx.getStorageSync('userId')
      const getAddress = await api.chooseAddress.getAddress({
        method: 'GET',
        query: {
          id
        }
      })
      this.selectTag = getAddress.data.tag
      _.findWhere(this.tags, {
        name: getAddress.data.tag
      }).select = true
      this.address = getAddress.data
      this.receiver = getAddress.data.receiver
      this.phoneNumber = getAddress.data.receiver
      if (getAddress.data.receiver) {
        this.unitNumber = getAddress.data.receiver
      } else {
        this.unitNumber = ''
      }
      this.$apply()
    }
    
    async onLoad(options) {
      console.log(this.$parent)
      qqmapsdk = new QQMapWX({
        key: 'SATBZ-RDSWW-YDDR3-RZAAP-ZGCVJ-WRFT3'
      })
      var that = this
      this.type = options.type
      this.from = options.from
      let title = ''
      switch (this.type) {
        case 'new':
          title = '新增配送地址'
          _.findWhere(this.tags, {
            name: '公司'
          }).select = true
          break
        case 'edit':
          title = '编辑配送地址'
          that.init(options.id)
          that.addressId = options.id
          break
        default:
      }
      wepy.setNavigationBarTitle({
        title
      })
    }
  }
</script>
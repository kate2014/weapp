<style lang="less">
  @import '../common/default.less';
  .footer-dialog {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    z-index: 1000;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: rgba(156, 156, 156, 0.65);
    .content {
      position: relative;
      background: #ffffff;
      border-radius: 8rpx;
      width: 560rpx;
      height: 572rpx;
      text-align: center;
      transform: rotateX(-100deg);
      .title {
        display: inline-block;
        font-family: PingFangSC-Regular;
        font-size: 32rpx;
        color: @mianColor;
        margin-top: 30rpx;
      }
      .main {
        position: relative;
        margin-top: 34rpx;
        .feedback {
          background: #f2f2f2;
          width: 488rpx;
          height: 330rpx;
          font-family: PingFangSC-Regular;
          font-size: 26rpx;
          color: @content;
          text-align: left;
          padding: 10rpx 20rpx;
          margin: 0 auto;
          box-sizing: border-box;
        }
        .count {
          position: absolute;
          bottom: 20rpx;
          right: 56rpx;
          font-size: 26rpx;
          color: @minorColor;
        }
      }
      button {
        background: #c4c4c4;
        border-radius: 4rpx;
        width: 490rpx;
        height: 88rpx;
        font-family: PingFangSC-Regular;
        font-size: 28rpx;
        color: #ffffff;
        margin-top: 20rpx;
        line-height: 88rpx;
      }
      button.active {
        background: @primaryColor;
      }
    }
    .close {
      background: rgba(136, 136, 136, 0.20);
      border: 3rpx solid #ffffff;
      width: 82rpx;
      height: 82rpx;
      border-radius: 100%;
      margin-top: 40rpx;
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      .close-icon {
        font-size: 38rpx;
        color: #fff;
      }
    }
  }
</style>

<template>
  <view wx:if="{{isShow}}" class="footer-dialog" catchtouchmove="true">
    <view class="content" animation="{{openDialogAnimationData}}">
      <text class="title">{{title}}</text>
      <view class="main">
        <textarea fixed="true" class="feedback" placeholder="{{placeHolder}}" maxlength="{{limitLength}}" @input.default="focus" />
        <text class="count">{{contentLength}}/{{limitLength}}</text>
      </view>
      <button class="{{btnActive ? 'active' : ''}}" @tap="submitContent" disabled="{{!btnActive}}">
            <view wx:if="{{confirming}}" >
            <view class="weui-loading"></view>
            <view class="weui-loadmore__tips">正在提交</view>
            </view>
            <view wx:else class="">
               {{btnText}}
            </view>
             
          </button>
    </view>
    <view class="close" @tap="close"><i class="iconfont close-icon">&#xe628;</i></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../api/index'
  import Tip from '../utils/common'
  export default class FooterDialog extends wepy.component {
    data = {
      contentLength: 0,
      isShow: false,
      content: '',
      confirming: false,
      openDialogAnimationData: {},
      tip: new Tip(),
      placeHolder: ''
    }
    props = {
      title: {
        type: String,
        default: '你想吃什么？'
      },
      defaultContent: {
        type: String,
        default: '告诉我你想吃啥，鲜盒子会满足你哦～'
      },
      btnText: {
        type: String,
        default: '确定'
      },
      btnActive: {
        type: Boolean,
        default: false
      },
      limitLength: {
        type: Number,
        default: 20
      }
    }
    async addUserExpected() {
      const result = await api.home.userExpected({
        query: {
          content: this.content,
          submitUserId: '123',
          origin: 'weSmall'
        },
        method: "POST"
      })
      if (result.statusCode === 200) {
        this.confirming = false;
        this.$apply()
        this.close();
        this.tip.toast('反馈成功')
      }
    }
    methods = {
      focus(e) {
        const {
          value = ''
        } = e.detail
        if (value.length > 0) {
          this.btnActive = true
        } else {
          this.btnActive = false
        }
        this.content = value
        this.contentLength = value.length
        this.$apply()
      },
      async submitContent(e) {
        if (this.confirming || !this.btnActive) return;
        this.confirming = true;
        this.$apply()
        this.addUserExpected()
      },
      open() {
        this.isShow = true
        setTimeout(() => {
          this.openDialogAnimation.opacity(1).rotateX(0).step()
          this.openDialogAnimationData = this.openDialogAnimation.export()
          this.$apply()
          setTimeout(() => {
            this.placeHolder = '告诉我你想吃啥，鲜盒子会满足你哦～'
            this.$apply()
          }, 350)
        }, 0)
      },
      close() {
        this.close();
      }
    }
    close() {
      if (this.confirming) return;
      this.contentLength = 0
      this.btnActive = false
      this.isShow = false
      this.openDialogAnimation.opacity(0).rotateX(-100).step()
      this.openDialogAnimationData = this.openDialogAnimation.export()
      this.$apply()
    }
    onLoad() {
      this.openDialogAnimation = wepy.createAnimation({
        duration: 300,
        timingFunction: 'ease',
        delay: 0
      })
    }
  }
</script>
<style lang="less">
@import '../assets/style/weui.less';
.orderItem{
  display: inline-block;
  width: 100%;
  height: 100%;
  position: relative;
  .components-orderItem{
    background-color: #fff;
    margin-top: 20rpx;
    // height: 396rpx;
    .component-OrderItemHeader{
      display: flex;
      justify-content: space-between;
      font-size: 28rpx;
      height: 88rpx;
      align-items: center;
      border-bottom: 1rpx solid #eee;
      .sendWay{
        padding-left: 10rpx;
        border-left: 6rpx solid #02cb73;
        height: 30rpx;
        line-height: 30rpx;
      }
    }
    .component-ProductImageList{
      height: 150rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
        .image-container{
          display: flex;
          justify-content: flex-start;
          height: 120rpx;
          .img-wrapper{
            margin-right: 36rpx;
            image{
              height: 120rpx;
              width: 120rpx;
            }
          }
        }
        .total{
          display: flex;
          justify-content: center;
          align-items: center;
          .amount-wrapper{
            font-size: 26rpx;
            margin-right: 5rpx;
            color: #888888;
            span{
              color: #02cb73;
            }
          }
          .iconfont{
            font-size: 26rpx;
          }
        }
      
    }
    .component-BoxInfo{
      height: 58rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1rpx solid #eee;
      .time{
        font-size: 24rpx;
        color: #888888;
      }
      .total-money{
        font-size: 28rpx;
        span{
        font-size: 30rpx;
        }
      }
    }
    .component-FootButtons{
      height: 100rpx;
      display: flex;
      align-items: center;
      justify-content: flex-end; 
      .pay{
        border-radius:4rpx;
        width:246rpx;
        height:60rpx;
        line-height: 60rpx;
        background: #02cb73;
        font-size:26rpx;
        color:#fff;
      }
      .footButtons{
        
        display: flex;
        align-items: center;
        justify-content: flex-end; 
      }
      .common{
        font-size: 26rpx;
        border-radius:4rpx;
        line-height: 60rpx;
        margin-left: 20rpx;
      }
      .minBtn{
        width: 156rpx;
        height: 56rpx;
        color: #888;
        border: 2rpx solid #cacaca;
      }
      .minBtnColor{
        width: 160rpx;
        height: 60rpx;
        background-color:#02cb73;
        border: none;
        color: #fff;
      }
      .maxBtnColor{
        color: #02cb73;
        height: 56rpx;
        width: 156rpx;
        background: #fff;
        border: 2rpx solid #02cb73;
      }
      .maxBtn{
        background-color:#02cb73;
        color: #fff;
        width:246rpx;
        height:60rpx;
      }
    }
  }
  .footTxt{
    background: #f4f5f5;
  }
  .load{
    margin:0;
    display:flex;
    justify-content:center;
    align-items:center;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
  }
}
.outer{
  padding: 0 25rpx;
}
.hidden{
  display: none
}
.noOrder{
  background: #fff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  position: relative;
  image{
   width: 615rpx;
   height: 479rpx;
  }
  text{
    margin-top:9rpx; 
    font-size:30rpx;
    color:#888888;
  }
  .load{
    margin:0;
    display:flex;
    justify-content:center;
    align-items:center;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
  }
}

</style>
<template>
    <view class="orderItem" wx:if="{{!noOrder}}">
      <block wx:for="{{orders}}" wx:for-index="index" wx:for-item="item" wx:key="key">
        <view class="components-orderItem outer">
          <view class="weui-loadmore load" wx:if="{{loading}}">
            <view class="weui-loading"></view>
          </view>
          <view   @tap="targetOrderDetail({{ item._id }}, {{ item.title }})">
            <view class="component-OrderItemHeader">
              <view class="sendWay">{{item.sendDay === 'today' ? '快速达' : item.sendDay === 'tomorrow' ? '明日达' : item.sendDay === 'express' ? '快递' : '' }}</view>
              <view class="orderStatus">{{item.title}}</view>
            </view>
            <view class="component-ProductImageList">
                <view class="image-container">
                  <repeat for="{{item.detail}}" index="index" item="itm" key="key">
                    <view class="img-wrapper" >
                      <image src="{{itm.mainPicture}}"/>
                    </view>
                  </repeat>
                </view>
                <view class="total">
                  <view class="amount-wrapper">共<span>{{item.totalAmount}}</span>件</view>
                  <i class="iconfont" style="color: #888888">&#xe617;</i>
                </view>
            </view>
            <view class="component-BoxInfo">
              <view class="time">{{item.createdAt}}</view>
              <view class="total-money">实付款：<span>¥{{item.total}}</span></view>
            </view>
          </view>
          <view class="component-FootButtons" >
            <view wx:if="{{item.status === '待付款'}}" class="pay" @tap.stop="toPay({{item._id}})">去支付{{item.timing}}</view>
            <view wx:else class="footButtons">
              <repeat for="{{item.btn}}" index="index" item="btns" key="key">
                <view hover-class="none" class="common  {{ item.title === '已取消' ?  'minBtn' : item.title === '待发货' ? 'minBtn' : item.title === '支付后取消' ? 'minBtn' : item.title === '待收货' ? (itm.txt !== '确认收货' ? 'minBtn' : 'maxBtnColor') : item.title === '已签收' ? 'minBtn' : item.title === '待退款' ? 'minBtn' : item.title === '已退款' ? 'minBtn' : item.title === '拒绝退款' ? 'minBtn' : 'maxBtn'}}"
                  @tap="go({{ item._id }}, {{btns.txt}})"
                >
                  {{btns.txt}}
                </view>
              </repeat>  
            </view>   
          </view>
          
        </view>
      </block>
      <view wx:if="{{isShowLoadMore}}" class="weui-loadmore">
        <view class="weui-loading"></view>
        <view class="weui-loadmore__tips">正在加载</view>
      </view>
      <view class=" weui-loadmore weui-loadmore_line {{loading ? 'hidden' : ''}}" wx:if="{{orders.length >= total}}" >
        <text class='footTxt  weui-loadmore__tips weui-loadmore__tips_in-line' >没有更多了</text>
      
      </view>
    </view>
    <view class="noOrder" wx:if="{{noOrder}}">
      <image src="https://xian62-1.oss-cn-hangzhou.aliyuncs.com/server/common/dev/2018/4/1522662465881.jpg"/>
      <text>没有相关订单</text>
      <view class="weui-loadmore load" wx:if="{{loading}}">
        <view class="weui-loading"></view>
      </view>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '../api/index'
  import _ from 'underscore'
  import Utility from '../utils/utility'
  
  export default class OrderItem extends wepy.component {
    props = {
      orders: {
        type: Object,
        default: []
      },
      total: {
        type: Number
      },
      isShowLoadMore: {
        type: Boolean
      },
      timing: {
        type: Date
      }, 
      noOrder: {
        type: Boolean
      },
      loading:{
        type: Boolean
      }
    }
    events = {

    }
    components = {
    }
    mixins = []
    data = {
    }
    computed = {
    }
    methods = {
      targetOrderDetail (_id, status) {
        this.$root.$navigate({
          url: `orderDetail?id=${_id}&status=${status}`
        })
      },
      go (id, txt) {
        const that = this
        if (txt === '订单追踪') {
          this.$root.$navigate({
            url: `orderTrace?&id=${id}`
          })
        } else if (txt === '删除订单'){
          wepy.showModal({
            content: '确定删除订单吗'
          }).then((res) => {
            if (res.confirm) {
              this.$emit( 'deleteOrder', id)
            }
          })
        } else if (txt === '确认收货') {
           wepy.showModal({
              content: '要确认收货嘛'
            }).then((res) => {
              if (res.confirm) {
                this.$emit('confirmOrder', id)
              }
            })
        }
      },
      async toPay(orderId) {
        const { userId, userInfo } = this.$root.$parent.globalData;
        const wechatPay = await api.wechat.wechatPay({
          query: {
            userId,
            _id: orderId,
            openid: userInfo.openid,
          },
          method: 'POST'
        });
        const prepay_id = wechatPay.data.prepay_id;
        Utility.wechatPay({ prepay_id }, () => {
          this.$redirect('./paySuccess', { orderId })
        },()=> {
          // this.$switch('./myOrder')
        });
      }
    }
    onLoad() {
      this.loading = true
    }
  }
</script>

